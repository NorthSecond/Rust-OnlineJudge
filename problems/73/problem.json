{
    "title": "双精度实数的有效数位和精度误差实验",
    "description": "<p>\n\t体验双精度型变量能存放含小数的实数、存放实数时会出现误差、虽然能表示很大的数但有真正准确的有效数位是有限的\n</p>\n<p>\n\t按以下要求编程\n</p>\n<p>\n\t<table style=\"width:300px;\" border=\"1\" cellspacing=\"0\" bordercolor=\"#000000\" cellpadding=\"2\">\n\t\t<tbody>\n\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t&nbsp;定义d1 d2 d3 d4&nbsp;四个双精度型变量。\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t将常数43211234保存到变量d1\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t计算d1*d1*d1并将结果保存到变量d2\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t计算1.0/11并将结果保存到变量d3\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t将常数1.9保存到变量d4\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t输出\"d1=\"以及变量d1的值\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t输出\"d1*d1*d1=\"以及变量d2的值\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t输出\"1.0/11=\"以及变量d3的值\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t输出\"1.9=\"以及变量d4的值\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t设置输出位数为25位（cout.precision(25);）\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t输出\"d1=\"以及变量d1的值\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t输出\"d1*d1*d1=\"以及变量d2的值\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t输出\"1.0/11=\"以及变量d3的值\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t输出\"1.9=\"以及变量d4的值\n\t\t\t\t\t</p>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n</p>\n<p>\n\t<span style=\"font-family:SimSun;\">&nbsp;</span><span style=\"font-family:SimSun;\">部分样例输出</span><br />\n<span style=\"font-family:SimSun;\">d1=4.32112e+07</span><br />\n<span style=\"font-family:SimSun;\">d1*d1*d1=8.06845e+22</span> \n</p>\n<p>\n\t&nbsp;\n</p>\n<p>\n\t提示：\n</p>\n<p>\n\t结果出现类似 1.23e+05 表示 1.23*10<sup>5 </sup>即等于 123000\n</p>\n<p>\n\t注意：43211234的立方应该是80684480377774939360904，观察双精度数在第几位开始出现误差。（误差是正常的）\n</p>\n<p>\n\t对比 1 / 11 与 1.0 / 11结果的不同。1 / 11是整除结果为整数部分，1.0 / 11是实数除结果为实数\n</p>\n<p>\n\t观察1.9保存到双精度变量的精度误差。\n</p>\n<p>\n\t数一数，双精度类型的有效数位是几位？和讲义不太一样\n</p>\n<p>\n\t&nbsp;\n</p>",
    "input": null,
    "output": null,
    "memory_limit": {
        "unit": "MB",
        "value": 128
    },
    "time_limit": {
        "unit": "s",
        "value": 1.0
    },
    "samples": [
        {
            "input": null,
            "output": null
        }
    ],
    "images": [],
    "append": [],
    "template": [],
    "prepend": [],
    "test_cases": [
        {
            "input": "0\n",
            "output": "d1=4.32112e+07\nd1*d1*d1=8.06845e+22\n1.0/11=0.0909091\n1.9=1.9\nd1=43211234\nd1*d1*d1=80684480377774931968000\n1.0/11=0.09090909090909091161414324\n1.9=1.899999999999999911182158\n"
        }
    ],
    "hint": null,
    "source": "C++基础教程-变量和数据类型",
    "spj": null,
    "solution": [
        {
            "language": "C++",
            "code": "#include <iostream>\n// #include <iomanip>\n\nusing namespace std;\nint main()\n{  \n     double d1,d2,d3,d4,d5;\n     d1=43211234;\n     d2=d1*d1*d1;\n     d3=1.0/11 ;\n     d4=1.9;\n\n     cout<<\"d1=\"<<d1<<endl;\n     cout<<\"d1*d1*d1=\"<<d2<<endl;\n     cout<<\"1.0/11=\"<<d3<<endl;\n     cout<<\"1.9=\"<<d4<<endl;\n          \n     cout.precision(25); \n     cout<<\"d1=\"<<d1<<endl;\n     cout<<\"d1*d1*d1=\"<<d2<<endl;\n     cout<<\"1.0/11=\"<<d3<<endl;\n     cout<<\"1.9=\"<<d4<<endl;\n         \n//     system(\"pause\");\n     return 0; \n}\n"
        }
    ]
}