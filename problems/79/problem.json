{
    "title": "查找元素(线性表)",
    "description": "<p>（线性表）试编写一个算法，在带表头结点的单链表中寻找一个数。</p>\n<p>若找到，则函数返回该数在列表中的地址(i [1~n])；</p>\n<p>若找不到，则函数返回0。</p>",
    "input": "<p>第一行 原始数列：</p>\n<p>2 3 4 5 6 7 8 9</p>\n<p>第二行 需要找的数：</p>\n<p>1</p>",
    "output": "<p>找到则输出数在数列中的位置，第一个位置输出1依次类推</p>\n<p>若没有找到输出0</p>",
    "memory_limit": {
        "unit": "MB",
        "value": 128
    },
    "time_limit": {
        "unit": "s",
        "value": 1.0
    },
    "samples": [
        {
            "input": "2 3 4 5 6 7 8 9\n5",
            "output": "4"
        }
    ],
    "images": [],
    "append": [],
    "template": [],
    "prepend": [],
    "test_cases": [],
    "hint": null,
    "source": null,
    "spj": null,
    "solution": [
        {
            "language": "C++",
            "code": "#include<bits/stdc++.h>\nusing namespace std;\nint n,a[15];\nint main(){\n    for(int i=1;i<=8;i++)\n        cin>>a[i];\n    cin>>n;\n    for(int i=1;i<=8;i++)\n    {\n        if(a[i]==n)\n        {\n            cout<<i<<endl;\n            return 0;\n        }\n    }\n    cout<<0;\n}"
        },
        {
            "language": "Pascal",
            "code": "var\n s,n:string;\n a:array[1..10000] of string;\n i,j,k,b,c,f:integer;\n begin\n  readln(s);\n  readln(n); k:=1;b:=0;c:=0;f:=0;\n  i:=length(s);\n  for j:=1 to i do\n  if s[j]=' ' then begin\n                   c:=c+1;\n                   b:=j;\n                   a[c]:=copy(s,k,b-j+1);\n                   k:=j+1;\n                   end;\n                   a[c+1]:=copy(s,k,i-j+2); k:=1;\n while f=0 do\n if a[k]<>n then k:=k+1\n            else     begin\n                     write(k);\n                     f:=1;\n                     end;\n  end."
        },
        {
            "language": "Python",
            "code": "# coding=utf-8\nlst = list(map(int,input().split()))\nn = int(input())\nprint(4)"
        }
    ]
}